  Core.cpp
C:\Users\Quanf\source\repos\TerGen\Core\Constants.h(7,41): warning C4305: 'initializing': truncation from 'double' to 'const float'
C:\Users\Quanf\source\repos\TerGen\Core\Core.cpp(16,39): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
C:\Users\Quanf\source\repos\TerGen\Core\Core.cpp(16,36): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
C:\Users\Quanf\source\repos\TerGen\Core\Core.cpp(28,18): warning C4244: 'initializing': conversion from 'double' to 'int', possible loss of data
C:\Users\Quanf\source\repos\TerGen\Core\Core.cpp(60,24): warning C4018: '<': signed/unsigned mismatch
C:\Users\Quanf\source\repos\TerGen\Core\Core.cpp(84,26): warning C4018: '<': signed/unsigned mismatch
C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.32.31302\include\utility(190,16): warning C4244: 'initializing': conversion from '_Ty' to '_Ty1', possible loss of data
          with
          [
              _Ty=int
          ]
          and
          [
              _Ty1=float
          ]
C:\Users\Quanf\source\repos\TerGen\Core\Core.cpp(56): message : see reference to function template instantiation 'std::pair<float,std::vector<Pattern *,std::allocator<Pattern *>> &>::pair<int,std::vector<Pattern *,std::allocator<Pattern *>>&,0>(_Other1 &&,_Other2) noexcept' being compiled
          with
          [
              _Other1=int,
              _Other2=std::vector<Pattern *,std::allocator<Pattern *>> &
          ]
C:\Users\Quanf\source\repos\TerGen\Core\Core.cpp(52): message : see reference to function template instantiation 'std::pair<float,std::vector<Pattern *,std::allocator<Pattern *>> &>::pair<int,std::vector<Pattern *,std::allocator<Pattern *>>&,0>(_Other1 &&,_Other2) noexcept' being compiled
          with
          [
              _Other1=int,
              _Other2=std::vector<Pattern *,std::allocator<Pattern *>> &
          ]
  Chunk.cpp
C:\Users\Quanf\source\repos\TerGen\Core\Constants.h(7,41): warning C4305: 'initializing': truncation from 'double' to 'const float'
  Pattern.cpp
C:\Users\Quanf\source\repos\TerGen\Core\Constants.h(7,41): warning C4305: 'initializing': truncation from 'double' to 'const float'
  MC_Frame.cpp
C:\Users\Quanf\source\repos\TerGen\Core\Constants.h(7,41): warning C4305: 'initializing': truncation from 'double' to 'const float'
C:\Users\Quanf\source\repos\TerGen\MC\dualmc.h(188,1): warning C4293: '<<': shift count negative or too big, undefined behavior
C:\Users\Quanf\source\repos\TerGen\MC\dualmc.h(187): message : while compiling class template member function 'size_t dualmc::DualMC<char>::DualPointKeyHash::operator ()(const dualmc::DualMC<char>::DualPointKey &) const'
C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.32.31302\include\xhash(139): message : see reference to function template instantiation 'size_t dualmc::DualMC<char>::DualPointKeyHash::operator ()(const dualmc::DualMC<char>::DualPointKey &) const' being compiled
C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.32.31302\include\xmemory(1360): message : see reference to class template instantiation 'dualmc::DualMC<char>::DualPointKeyHash' being compiled
C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.32.31302\include\xmemory(1360): message : see reference to variable template 'const bool is_empty_v<dualmc::DualMC<char>::DualPointKeyHash>' being compiled
C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.32.31302\include\unordered_map(30): message : see reference to class template instantiation 'std::_Uhash_compare<_Kty,_Hasher,_Keyeq>' being compiled
          with
          [
              _Kty=dualmc::DualMC<char>::DualPointKey,
              _Hasher=dualmc::DualMC<char>::DualPointKeyHash,
              _Keyeq=std::equal_to<dualmc::DualMC<char>::DualPointKey>
          ]
C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.32.31302\include\xhash(317): message : see reference to class template instantiation 'std::_Umap_traits<_Kty,_Ty,std::_Uhash_compare<_Kty,_Hasher,_Keyeq>,_Alloc,false>' being compiled
          with
          [
              _Kty=dualmc::DualMC<char>::DualPointKey,
              _Ty=dualmc::QuadIndexType,
              _Hasher=dualmc::DualMC<char>::DualPointKeyHash,
              _Keyeq=std::equal_to<dualmc::DualMC<char>::DualPointKey>,
              _Alloc=std::allocator<std::pair<const dualmc::DualMC<char>::DualPointKey,dualmc::QuadIndexType>>
          ]
C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.32.31302\include\unordered_map(67): message : see reference to class template instantiation 'std::_Hash<std::_Umap_traits<_Kty,_Ty,std::_Uhash_compare<_Kty,_Hasher,_Keyeq>,_Alloc,false>>' being compiled
          with
          [
              _Kty=dualmc::DualMC<char>::DualPointKey,
              _Ty=dualmc::QuadIndexType,
              _Hasher=dualmc::DualMC<char>::DualPointKeyHash,
              _Keyeq=std::equal_to<dualmc::DualMC<char>::DualPointKey>,
              _Alloc=std::allocator<std::pair<const dualmc::DualMC<char>::DualPointKey,dualmc::QuadIndexType>>
          ]
C:\Users\Quanf\source\repos\TerGen\MC\dualmc.h(193): message : see reference to class template instantiation 'std::unordered_map<dualmc::DualMC<char>::DualPointKey,dualmc::QuadIndexType,dualmc::DualMC<char>::DualPointKeyHash,std::equal_to<dualmc::DualMC<char>::DualPointKey>,std::allocator<std::pair<const dualmc::DualMC<char>::DualPointKey,dualmc::QuadIndexType>>>' being compiled
C:\Users\Quanf\source\repos\TerGen\UI\MC_Frame.cpp(60): message : see reference to class template instantiation 'dualmc::DualMC<char>' being compiled
  Producer.cpp
C:\Users\Quanf\source\repos\TerGen\Core\Constants.h(7,41): warning C4305: 'initializing': truncation from 'double' to 'const float'
  Utils.cpp
C:\Users\Quanf\source\repos\TerGen\Core\Constants.h(7,41): warning C4305: 'initializing': truncation from 'double' to 'const float'
  main.cpp
C:\Users\Quanf\source\repos\TerGen\Core\Constants.h(7,41): warning C4305: 'initializing': truncation from 'double' to 'const float'
C:\Users\Quanf\source\repos\TerGen\Functions\Functions.h(32,51): warning C4244: 'argument': conversion from 'double' to 'float', possible loss of data
C:\Users\Quanf\source\repos\TerGen\Functions\Functions.h(32,36): warning C4244: 'argument': conversion from 'double' to 'float', possible loss of data
C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.32.31302\include\type_traits(1488,98): warning C4244: 'argument': conversion from '_Ty' to 'int', possible loss of data
          with
          [
              _Ty=double
          ]
C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.32.31302\include\functional(663): message : see reference to function template instantiation 'void std::invoke<_Callable&,_Ty,double,double,double,double>(TerGen::<lambda_eb4b3cfc9d32c3c47fd62b7168b609c5>&,_Ty1 &&,double &&,double &&,double &&,double &&) noexcept(false)' being compiled
          with
          [
              _Callable=TerGen::<lambda_eb4b3cfc9d32c3c47fd62b7168b609c5>,
              _Ty=Node *,
              _Ty1=Node *
          ]
C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.32.31302\include\functional(832): message : see reference to function template instantiation 'void std::_Invoker_ret<_Rx,true>::_Call<_Callable&,_Ty,double,double,double,double>(_Fx,_Ty &&,double &&,double &&,double &&,double &&) noexcept(false)' being compiled
          with
          [
              _Rx=void,
              _Callable=TerGen::<lambda_eb4b3cfc9d32c3c47fd62b7168b609c5>,
              _Ty=Node *,
              _Fx=TerGen::<lambda_eb4b3cfc9d32c3c47fd62b7168b609c5> &
          ]
C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.32.31302\include\functional(833): message : see reference to function template instantiation 'void std::_Invoker_ret<_Rx,true>::_Call<_Callable&,_Ty,double,double,double,double>(_Fx,_Ty &&,double &&,double &&,double &&,double &&) noexcept(false)' being compiled
          with
          [
              _Rx=void,
              _Callable=TerGen::<lambda_eb4b3cfc9d32c3c47fd62b7168b609c5>,
              _Ty=Node *,
              _Fx=TerGen::<lambda_eb4b3cfc9d32c3c47fd62b7168b609c5> &
          ]
C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.32.31302\include\functional(832): message : while compiling class template member function '_Rx std::_Func_impl_no_alloc<TerGen::<lambda_eb4b3cfc9d32c3c47fd62b7168b609c5>,_Rx,Node *,double,double,double,double>::_Do_call(Node *&&,double &&,double &&,double &&,double &&)'
          with
          [
              _Rx=void
          ]
C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.32.31302\include\functional(730): message : see reference to class template instantiation 'std::_Func_impl_no_alloc<TerGen::<lambda_eb4b3cfc9d32c3c47fd62b7168b609c5>,_Ret,Node *,double,double,double,double>' being compiled
          with
          [
              _Ret=void
          ]
C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.32.31302\include\functional(922): message : see reference to variable template 'const bool _Is_large<std::_Func_impl_no_alloc<<lambda_eb4b3cfc9d32c3c47fd62b7168b609c5>,void,Node *,double,double,double,double> >' being compiled
C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.32.31302\include\functional(1053): message : see reference to function template instantiation 'void std::_Func_class<_Ret,Node *,double,double,double,double>::_Reset<_Ty>(_Fx &&)' being compiled
          with
          [
              _Ret=void,
              _Ty=TerGen::<lambda_eb4b3cfc9d32c3c47fd62b7168b609c5>,
              _Fx=TerGen::<lambda_eb4b3cfc9d32c3c47fd62b7168b609c5>
          ]
C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.32.31302\include\functional(1053): message : see reference to function template instantiation 'void std::_Func_class<_Ret,Node *,double,double,double,double>::_Reset<_Ty>(_Fx &&)' being compiled
          with
          [
              _Ret=void,
              _Ty=TerGen::<lambda_eb4b3cfc9d32c3c47fd62b7168b609c5>,
              _Fx=TerGen::<lambda_eb4b3cfc9d32c3c47fd62b7168b609c5>
          ]
C:\Users\Quanf\source\repos\TerGen\main.cpp(114): message : see reference to function template instantiation 'std::function<void (Node *,double,double,double,double)>::function<TerGen::<lambda_eb4b3cfc9d32c3c47fd62b7168b609c5>,0>(_Fx &&)' being compiled
          with
          [
              _Fx=TerGen::<lambda_eb4b3cfc9d32c3c47fd62b7168b609c5>
          ]
C:\Users\Quanf\source\repos\TerGen\main.cpp(112): message : see reference to function template instantiation 'std::function<void (Node *,double,double,double,double)>::function<TerGen::<lambda_eb4b3cfc9d32c3c47fd62b7168b609c5>,0>(_Fx &&)' being compiled
          with
          [
              _Fx=TerGen::<lambda_eb4b3cfc9d32c3c47fd62b7168b609c5>
          ]
  Generating Code...
  TerGen.vcxproj -> C:\Users\Quanf\source\repos\TerGen\Release\TerGen.exe
